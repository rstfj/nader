from flet import *
import sqlite3

conn = sqlite3.connect("dato.db", check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS student(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    stdname TEXT,
    stdmail TEXT,
    stdphone TEXT,
    stdaddress TEXT,
    stdkrain INTEGER,
    stdaslimeh INTEGER,
    stdarabic INTEGER,
    stdchemistry INTEGER,
    stdenglish INTEGER,
    stdalom INTEGER
)""")
conn.commit()

def main(page: Page):
    page.title = 'Nader'
    page.scroll = 'auto'
    page.window.top = 1
    page.window.left = 960
    page.window.width = 390
    page.window.height = 740
    page.bgcolor = 'white'
    page.theme_mode = ThemeMode.LIGHT

    tabe_name = 'student'
    query = f'SELECT COUNT(*) FROM {tabe_name}'
    cursor.execute(query)
    result = cursor.fetchone()
    row_count = result[0]

    def add(e):
        cursor.execute("INSERT INTO student (stdname, stdmail, stdphone, stdaddress, stdkrain, stdaslimeh, stdarabic, stdchemistry, stdenglish, stdalom) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
                       (tname.value, tmail.value, tphone.value, taddress.value, krain.value, aslimeh.value, arabic.value, chemistry.value, english.value, alom.value))
        conn.commit()
        print("ÿ∑ÿßŸÑÿ® ÿ¨ÿØŸäÿØ ŸÖÿ∂ÿßŸÅ")

    def show(e):
        page.clean()
        c = conn.cursor()
        c.execute("SELECT * FROM student")
        users = c.fetchall()

        if users:
            keys = ['id', 'stdname', 'stdmail', 'stdphone', 'stdaddress', 'stdkrain', 'stdaslimeh', 'stdarabic', 'stdchemistry', 'stdenglish', 'stdalom']
            result = [dict(zip(keys, values)) for values in users]
            for x in result:
                ##############ÿßŸÑÿπŸÑÿßŸÖÿßÿ™#################
                m = x['stdkrain']
                a = x['stdaslimeh']
                f = x['stdarabic']
                h = x['stdchemistry']
                e = x['stdenglish']
                o = x['stdalom']
                total = m + a + f + h + e + o
                if total < 50:
                    status = Text('üò¢ ÿ±ÿßÿ≥ÿ®', size=19, color='white')
                else:
                    status = Text('ü§© ŸÜÿßÿ¨ÿ≠', size=19, color='white')

                page.add(
                    Card(
                        color='black',
                        content=Container(
                            content=Column(
                                [
                                    ListTile(
                                        leading=Icon(icons.PERSON),
                                        title=Text('Name: ' + x['stdname'], color='black'),
                                        subtitle=Text('Student Email: ' + x['stdmail'], color='amber')
                                    ),
                                    Row([
                                        Text('Phone: ' + x['stdphone'], color='green'),
                                        Text('Address: ' + x['stdaddress'], color='green'),
                                    ], alignment=MainAxisAlignment.CENTER),
                                    Row([
                                        Text(':ŸÇÿ±ÿ¢ŸÜ ŸÉÿ±ŸäŸÖ ' + str(x['stdkrain']), color='blue'),
                                        Text(':ÿ•ÿ≥ŸÑÿßŸÖŸäÿ© ' + str(x['stdaslimeh']), color='blue'),
                                        Text(':ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ' + str(x['stdarabic']), color='blue'),
                                    ], alignment=MainAxisAlignment.END),
                                    Row([
                                        Text(':ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿßÿ™ ' + str(x['stdchemistry']), color='blue'),
                                        Text(':ÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ© ' + str(x['stdenglish']), color='blue'),
                                        Text(':ÿßŸÑÿπŸÑŸàŸÖ ' + str(x['stdalom']), color='blue'),
                                    ], alignment=MainAxisAlignment.END),
                                    Row([
                                        status
                                    ], alignment=MainAxisAlignment.CENTER)
                                ]
                            )
                        )
                    )
                )
        page.update()

    ############ÿ≠ŸÇŸàŸÑ ÿßŸÑÿßÿØÿÆÿßŸÑ############
    tname = TextField(label='ÿßÿ≥ŸÖ ÿßŸÑÿ∑ÿßŸÑÿ®', icon=icons.PERSON, rtl=True, height=38)
    tmail = TextField(label='ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä', icon=icons.MAIL, rtl=True, height=38)
    tphone = TextField(label='ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ', icon=icons.PHONE, rtl=True, height=38)
    taddress = TextField(label='ÿßŸÑÿπŸÜŸàÿßŸÜ ÿ£Ÿà ÿßŸÑÿ≥ŸÉŸÜ', icon=icons.LOCATION_CITY, rtl=True, height=38)
    ######################################
    #############ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ∑ÿßŸÑÿ®###########
    marktext = Text("ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ∑ÿßŸÑÿ®", text_align='center', width=110)
    krain = TextField(label='ŸÇÿ±ÿ¢ŸÜ ŸÉÿ±ŸäŸÖ', width=110, rtl=True, height=38)
    aslimeh = TextField(label='ÿ•ÿ≥ŸÑÿßŸÖŸäÿ©', width=110, rtl=True, height=38)
    arabic = TextField(label='ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', width=110, rtl=True, height=38)
    chemistry = TextField(label='ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿßÿ™', width=110, rtl=True, height=38)
    english = TextField(label='ÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ©', width=110, rtl=True, height=38)
    alom = TextField(label='ÿßŸÑÿπŸÑŸàŸÖ', width=110, rtl=True, height=38)
    ######################################

    addbuttn = ElevatedButton(
        "ÿßÿ∂ÿßŸÅŸá ÿ∑ÿßŸÑÿ® ÿ¨ÿØŸäÿØ",
        width=170,
        style=ButtonStyle(bgcolor='blue', color='white', padding=15),
        on_click=add
    )

    showbuttn = ElevatedButton(
        "ÿπÿ±ÿ∂ ŸÉŸÑ ÿßŸÑÿ∑ŸÑÿßÿ®",
        width=170,
        style=ButtonStyle(bgcolor='blue', color='white', padding=15),
        on_click=show
    )

    page.add(
        Row(
            [
                Image(src="N_circle.png", width=280)
            ],
            alignment=MainAxisAlignment.CENTER
        ),
        Row(
            [
                Text("ÿ™ÿ∑ÿ®ŸäŸÇ ÿßŸÑÿ∑ÿßŸÑÿ® ŸàÿßŸÑŸÖÿπŸÑŸÖ ŸÅŸä ÿ¨Ÿäÿ®ŸÉ", size=20, font_family="IBM Plex Sans Arabic", color='black'),
            ],
            alignment=MainAxisAlignment.CENTER
        ),
        Row(
            [
                Text("ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿßÿ® ÿßŸÑŸÖÿ≥ÿ¨ŸÑŸäŸÜ:", size=20, font_family="IBM Plex Sans Arabic", color='blue'),
                Text(str(row_count), size=20, font_family="IBM Plex Sans Arabic", color='black'),
            ],
            alignment=MainAxisAlignment.CENTER, rtl=True
        ),
        tname,
        tphone,
        tmail,
        taddress,
        Row(
            [
                marktext
            ],
            alignment=MainAxisAlignment.CENTER, rtl=True
        ),
        Row(
            [
                krain,
                aslimeh,
                arabic,
            ],
            alignment=MainAxisAlignment.CENTER, rtl=True
        ),
        Row(
            [
                chemistry,
                english,
                alom
            ],
            alignment=MainAxisAlignment.CENTER, rtl=True
        ),
        Row(
            [
                addbuttn,
                showbuttn
            ],
            alignment=MainAxisAlignment.CENTER, rtl=True
        )
    )

    page.update()

app(main)
